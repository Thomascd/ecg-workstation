//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ECGWorkStation.WebService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int permissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string realIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int permission {
            get {
                return this.permissionField;
            }
            set {
                if ((this.permissionField.Equals(value) != true)) {
                    this.permissionField = value;
                    this.RaisePropertyChanged("permission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string realID {
            get {
                return this.realIDField;
            }
            set {
                if ((object.ReferenceEquals(this.realIDField, value) != true)) {
                    this.realIDField = value;
                    this.RaisePropertyChanged("realID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Patient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string addressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string jobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string patientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string patientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool sexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float weightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string address {
            get {
                return this.addressField;
            }
            set {
                if ((object.ReferenceEquals(this.addressField, value) != true)) {
                    this.addressField = value;
                    this.RaisePropertyChanged("address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dateOfBirth {
            get {
                return this.dateOfBirthField;
            }
            set {
                if ((this.dateOfBirthField.Equals(value) != true)) {
                    this.dateOfBirthField = value;
                    this.RaisePropertyChanged("dateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string job {
            get {
                return this.jobField;
            }
            set {
                if ((object.ReferenceEquals(this.jobField, value) != true)) {
                    this.jobField = value;
                    this.RaisePropertyChanged("job");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string patientID {
            get {
                return this.patientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.patientIDField, value) != true)) {
                    this.patientIDField = value;
                    this.RaisePropertyChanged("patientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string patientName {
            get {
                return this.patientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.patientNameField, value) != true)) {
                    this.patientNameField = value;
                    this.RaisePropertyChanged("patientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool sex {
            get {
                return this.sexField;
            }
            set {
                if ((this.sexField.Equals(value) != true)) {
                    this.sexField = value;
                    this.RaisePropertyChanged("sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float weight {
            get {
                return this.weightField;
            }
            set {
                if ((this.weightField.Equals(value) != true)) {
                    this.weightField = value;
                    this.RaisePropertyChanged("weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Doctor", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Doctor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string phoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string roomField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                if ((object.ReferenceEquals(this.phoneField, value) != true)) {
                    this.phoneField = value;
                    this.RaisePropertyChanged("phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string room {
            get {
                return this.roomField;
            }
            set {
                if ((object.ReferenceEquals(this.roomField, value) != true)) {
                    this.roomField = value;
                    this.RaisePropertyChanged("room");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Comment", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Comment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime changedDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string docIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string docNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string recordIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime changedDateTime {
            get {
                return this.changedDateTimeField;
            }
            set {
                if ((this.changedDateTimeField.Equals(value) != true)) {
                    this.changedDateTimeField = value;
                    this.RaisePropertyChanged("changedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string docID {
            get {
                return this.docIDField;
            }
            set {
                if ((object.ReferenceEquals(this.docIDField, value) != true)) {
                    this.docIDField = value;
                    this.RaisePropertyChanged("docID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string docName {
            get {
                return this.docNameField;
            }
            set {
                if ((object.ReferenceEquals(this.docNameField, value) != true)) {
                    this.docNameField = value;
                    this.RaisePropertyChanged("docName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string recordID {
            get {
                return this.recordIDField;
            }
            set {
                if ((object.ReferenceEquals(this.recordIDField, value) != true)) {
                    this.recordIDField = value;
                    this.RaisePropertyChanged("recordID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pattern", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Pattern : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string patternIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string patternNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string patternID {
            get {
                return this.patternIDField;
            }
            set {
                if ((object.ReferenceEquals(this.patternIDField, value) != true)) {
                    this.patternIDField = value;
                    this.RaisePropertyChanged("patternID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string patternName {
            get {
                return this.patternNameField;
            }
            set {
                if ((object.ReferenceEquals(this.patternNameField, value) != true)) {
                    this.patternNameField = value;
                    this.RaisePropertyChanged("patternName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HistoryRecord", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class HistoryRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateTimeOfRecordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string doctorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string doctorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int heartRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string patientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int qrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int qrsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float rField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string recordDirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string recordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int rsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int totalTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dateTimeOfRecord {
            get {
                return this.dateTimeOfRecordField;
            }
            set {
                if ((this.dateTimeOfRecordField.Equals(value) != true)) {
                    this.dateTimeOfRecordField = value;
                    this.RaisePropertyChanged("dateTimeOfRecord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string doctorID {
            get {
                return this.doctorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.doctorIDField, value) != true)) {
                    this.doctorIDField = value;
                    this.RaisePropertyChanged("doctorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string doctorName {
            get {
                return this.doctorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.doctorNameField, value) != true)) {
                    this.doctorNameField = value;
                    this.RaisePropertyChanged("doctorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int heartRate {
            get {
                return this.heartRateField;
            }
            set {
                if ((this.heartRateField.Equals(value) != true)) {
                    this.heartRateField = value;
                    this.RaisePropertyChanged("heartRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string patientID {
            get {
                return this.patientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.patientIDField, value) != true)) {
                    this.patientIDField = value;
                    this.RaisePropertyChanged("patientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int qr {
            get {
                return this.qrField;
            }
            set {
                if ((this.qrField.Equals(value) != true)) {
                    this.qrField = value;
                    this.RaisePropertyChanged("qr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int qrs {
            get {
                return this.qrsField;
            }
            set {
                if ((this.qrsField.Equals(value) != true)) {
                    this.qrsField = value;
                    this.RaisePropertyChanged("qrs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float r {
            get {
                return this.rField;
            }
            set {
                if ((this.rField.Equals(value) != true)) {
                    this.rField = value;
                    this.RaisePropertyChanged("r");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string recordDir {
            get {
                return this.recordDirField;
            }
            set {
                if ((object.ReferenceEquals(this.recordDirField, value) != true)) {
                    this.recordDirField = value;
                    this.RaisePropertyChanged("recordDir");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string recordID {
            get {
                return this.recordIDField;
            }
            set {
                if ((object.ReferenceEquals(this.recordIDField, value) != true)) {
                    this.recordIDField = value;
                    this.RaisePropertyChanged("recordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int rs {
            get {
                return this.rsField;
            }
            set {
                if ((this.rsField.Equals(value) != true)) {
                    this.rsField = value;
                    this.RaisePropertyChanged("rs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int totalTime {
            get {
                return this.totalTimeField;
            }
            set {
                if ((this.totalTimeField.Equals(value) != true)) {
                    this.totalTimeField = value;
                    this.RaisePropertyChanged("totalTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WebService.IECGService")]
    public interface IECGService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/loadAFrameFromRecord", ReplyAction="http://tempuri.org/IECGService/loadAFrameFromRecordResponse")]
        string loadAFrameFromRecord(string recordDir, long offset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/deleteECGRecord", ReplyAction="http://tempuri.org/IECGService/deleteECGRecordResponse")]
        string deleteECGRecord(string recordID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/getUserByUsernamePassword", ReplyAction="http://tempuri.org/IECGService/getUserByUsernamePasswordResponse")]
        ECGWorkStation.WebService.User getUserByUsernamePassword(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/getAllUser", ReplyAction="http://tempuri.org/IECGService/getAllUserResponse")]
        ECGWorkStation.WebService.User[] getAllUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/getUserByUsername", ReplyAction="http://tempuri.org/IECGService/getUserByUsernameResponse")]
        ECGWorkStation.WebService.User getUserByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/addNewUser", ReplyAction="http://tempuri.org/IECGService/addNewUserResponse")]
        int addNewUser(string username, string pwd, int permission, string realID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/editUser", ReplyAction="http://tempuri.org/IECGService/editUserResponse")]
        int editUser(string username, string pwd, int permission, string realID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/deleteUser", ReplyAction="http://tempuri.org/IECGService/deleteUserResponse")]
        int deleteUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/generatePatientID", ReplyAction="http://tempuri.org/IECGService/generatePatientIDResponse")]
        string generatePatientID();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/generateDoctorID", ReplyAction="http://tempuri.org/IECGService/generateDoctorIDResponse")]
        string generateDoctorID();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/generateRecordID", ReplyAction="http://tempuri.org/IECGService/generateRecordIDResponse")]
        string generateRecordID(string PID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/getPatientByID", ReplyAction="http://tempuri.org/IECGService/getPatientByIDResponse")]
        ECGWorkStation.WebService.Patient getPatientByID(string patientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/getPatientsByName", ReplyAction="http://tempuri.org/IECGService/getPatientsByNameResponse")]
        ECGWorkStation.WebService.Patient[] getPatientsByName(string patientName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/getAllPatient", ReplyAction="http://tempuri.org/IECGService/getAllPatientResponse")]
        ECGWorkStation.WebService.Patient[] getAllPatient();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/getAllPatientID", ReplyAction="http://tempuri.org/IECGService/getAllPatientIDResponse")]
        string[] getAllPatientID();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/getPatientByResDoctor", ReplyAction="http://tempuri.org/IECGService/getPatientByResDoctorResponse")]
        ECGWorkStation.WebService.Patient[] getPatientByResDoctor(string docID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/getPatientByNotResDoctor", ReplyAction="http://tempuri.org/IECGService/getPatientByNotResDoctorResponse")]
        ECGWorkStation.WebService.Patient[] getPatientByNotResDoctor(string docID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/addNewPatient", ReplyAction="http://tempuri.org/IECGService/addNewPatientResponse")]
        int addNewPatient(string maBN, string tenBN, System.DateTime ngaysinh, bool gioitinh, float cannang, string nghenghiep, string diachi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/editPatient", ReplyAction="http://tempuri.org/IECGService/editPatientResponse")]
        int editPatient(string maBN, string tenBN, System.DateTime ngaysinh, bool gioitinh, float cannang, string nghenghiep, string diachi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/getPatientByName_resDoctor", ReplyAction="http://tempuri.org/IECGService/getPatientByName_resDoctorResponse")]
        ECGWorkStation.WebService.Patient[] getPatientByName_resDoctor(string patientName, string docID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/getPatientByName_notResDoctor", ReplyAction="http://tempuri.org/IECGService/getPatientByName_notResDoctorResponse")]
        ECGWorkStation.WebService.Patient[] getPatientByName_notResDoctor(string patientName, string docID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/getResponsibleDoctor", ReplyAction="http://tempuri.org/IECGService/getResponsibleDoctorResponse")]
        ECGWorkStation.WebService.Doctor getResponsibleDoctor(string pID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/addNewDoctor", ReplyAction="http://tempuri.org/IECGService/addNewDoctorResponse")]
        int addNewDoctor(string maBS, string tenBS, string phong, string dienthoai);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/editDoctor", ReplyAction="http://tempuri.org/IECGService/editDoctorResponse")]
        int editDoctor(string maBS, string tenBS, string phong, string dienthoai);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/getAllDoctorID", ReplyAction="http://tempuri.org/IECGService/getAllDoctorIDResponse")]
        string[] getAllDoctorID();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/addNewMedicalReport", ReplyAction="http://tempuri.org/IECGService/addNewMedicalReportResponse")]
        int addNewMedicalReport(string maBN, string lydovaovien, string trieuchung, string tinhtrangcothe, string cacphuongphapdieutri, string tinhtranghientai, string tieusubanthan, string tieusugiadinh, string tieusuthancan, string sinhhoatcanhan, string chuandoan, string nguyennhan, string mabs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/editMedicalReport", ReplyAction="http://tempuri.org/IECGService/editMedicalReportResponse")]
        int editMedicalReport(string maBN, string lydovaovien, string trieuchung, string tinhtrangcothe, string cacphuongphapdieutri, string tinhtranghientai, string tieusubanthan, string tieusugiadinh, string tieusuthancan, string sinhhoatcanhan, string chuandoan, string nguyennhan, string mabs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/addNewComment", ReplyAction="http://tempuri.org/IECGService/addNewCommentResponse")]
        int addNewComment(string maBanGhi, string maBS, System.DateTime ngaycapnhat, string noidung);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/editComment", ReplyAction="http://tempuri.org/IECGService/editCommentResponse")]
        int editComment(string maBanGhi, string maBS, System.DateTime ngaycapnhat, string noidung);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/getCommentByRID", ReplyAction="http://tempuri.org/IECGService/getCommentByRIDResponse")]
        ECGWorkStation.WebService.Comment[] getCommentByRID(string RID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/getCommentContent", ReplyAction="http://tempuri.org/IECGService/getCommentContentResponse")]
        string getCommentContent(string RID, string DocID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/deleteComment", ReplyAction="http://tempuri.org/IECGService/deleteCommentResponse")]
        string deleteComment(string RID, string DocID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/getAllPattern", ReplyAction="http://tempuri.org/IECGService/getAllPatternResponse")]
        ECGWorkStation.WebService.Pattern[] getAllPattern();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/getAllRecordByPID", ReplyAction="http://tempuri.org/IECGService/getAllRecordByPIDResponse")]
        ECGWorkStation.WebService.HistoryRecord[] getAllRecordByPID(string patientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/getRecordByID", ReplyAction="http://tempuri.org/IECGService/getRecordByIDResponse")]
        ECGWorkStation.WebService.HistoryRecord getRecordByID(string recordID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/getRecordByPIDBetween", ReplyAction="http://tempuri.org/IECGService/getRecordByPIDBetweenResponse")]
        ECGWorkStation.WebService.HistoryRecord[] getRecordByPIDBetween(string patientID, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/loadECGRecord", ReplyAction="http://tempuri.org/IECGService/loadECGRecordResponse")]
        string loadECGRecord(string recordID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/loadECGRawRecord", ReplyAction="http://tempuri.org/IECGService/loadECGRawRecordResponse")]
        string loadECGRawRecord(string recordID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECGService/loadECGRecord12", ReplyAction="http://tempuri.org/IECGService/loadECGRecord12Response")]
        string loadECGRecord12(string recordid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IECGServiceChannel : ECGWorkStation.WebService.IECGService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ECGServiceClient : System.ServiceModel.ClientBase<ECGWorkStation.WebService.IECGService>, ECGWorkStation.WebService.IECGService {
        
        public ECGServiceClient() {
        }
        
        public ECGServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ECGServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ECGServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ECGServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string loadAFrameFromRecord(string recordDir, long offset) {
            return base.Channel.loadAFrameFromRecord(recordDir, offset);
        }
        
        public string deleteECGRecord(string recordID) {
            return base.Channel.deleteECGRecord(recordID);
        }
        
        public ECGWorkStation.WebService.User getUserByUsernamePassword(string username, string password) {
            return base.Channel.getUserByUsernamePassword(username, password);
        }
        
        public ECGWorkStation.WebService.User[] getAllUser() {
            return base.Channel.getAllUser();
        }
        
        public ECGWorkStation.WebService.User getUserByUsername(string username) {
            return base.Channel.getUserByUsername(username);
        }
        
        public int addNewUser(string username, string pwd, int permission, string realID) {
            return base.Channel.addNewUser(username, pwd, permission, realID);
        }
        
        public int editUser(string username, string pwd, int permission, string realID) {
            return base.Channel.editUser(username, pwd, permission, realID);
        }
        
        public int deleteUser(string username) {
            return base.Channel.deleteUser(username);
        }
        
        public string generatePatientID() {
            return base.Channel.generatePatientID();
        }
        
        public string generateDoctorID() {
            return base.Channel.generateDoctorID();
        }
        
        public string generateRecordID(string PID) {
            return base.Channel.generateRecordID(PID);
        }
        
        public ECGWorkStation.WebService.Patient getPatientByID(string patientID) {
            return base.Channel.getPatientByID(patientID);
        }
        
        public ECGWorkStation.WebService.Patient[] getPatientsByName(string patientName) {
            return base.Channel.getPatientsByName(patientName);
        }
        
        public ECGWorkStation.WebService.Patient[] getAllPatient() {
            return base.Channel.getAllPatient();
        }
        
        public string[] getAllPatientID() {
            return base.Channel.getAllPatientID();
        }
        
        public ECGWorkStation.WebService.Patient[] getPatientByResDoctor(string docID) {
            return base.Channel.getPatientByResDoctor(docID);
        }
        
        public ECGWorkStation.WebService.Patient[] getPatientByNotResDoctor(string docID) {
            return base.Channel.getPatientByNotResDoctor(docID);
        }
        
        public int addNewPatient(string maBN, string tenBN, System.DateTime ngaysinh, bool gioitinh, float cannang, string nghenghiep, string diachi) {
            return base.Channel.addNewPatient(maBN, tenBN, ngaysinh, gioitinh, cannang, nghenghiep, diachi);
        }
        
        public int editPatient(string maBN, string tenBN, System.DateTime ngaysinh, bool gioitinh, float cannang, string nghenghiep, string diachi) {
            return base.Channel.editPatient(maBN, tenBN, ngaysinh, gioitinh, cannang, nghenghiep, diachi);
        }
        
        public ECGWorkStation.WebService.Patient[] getPatientByName_resDoctor(string patientName, string docID) {
            return base.Channel.getPatientByName_resDoctor(patientName, docID);
        }
        
        public ECGWorkStation.WebService.Patient[] getPatientByName_notResDoctor(string patientName, string docID) {
            return base.Channel.getPatientByName_notResDoctor(patientName, docID);
        }
        
        public ECGWorkStation.WebService.Doctor getResponsibleDoctor(string pID) {
            return base.Channel.getResponsibleDoctor(pID);
        }
        
        public int addNewDoctor(string maBS, string tenBS, string phong, string dienthoai) {
            return base.Channel.addNewDoctor(maBS, tenBS, phong, dienthoai);
        }
        
        public int editDoctor(string maBS, string tenBS, string phong, string dienthoai) {
            return base.Channel.editDoctor(maBS, tenBS, phong, dienthoai);
        }
        
        public string[] getAllDoctorID() {
            return base.Channel.getAllDoctorID();
        }
        
        public int addNewMedicalReport(string maBN, string lydovaovien, string trieuchung, string tinhtrangcothe, string cacphuongphapdieutri, string tinhtranghientai, string tieusubanthan, string tieusugiadinh, string tieusuthancan, string sinhhoatcanhan, string chuandoan, string nguyennhan, string mabs) {
            return base.Channel.addNewMedicalReport(maBN, lydovaovien, trieuchung, tinhtrangcothe, cacphuongphapdieutri, tinhtranghientai, tieusubanthan, tieusugiadinh, tieusuthancan, sinhhoatcanhan, chuandoan, nguyennhan, mabs);
        }
        
        public int editMedicalReport(string maBN, string lydovaovien, string trieuchung, string tinhtrangcothe, string cacphuongphapdieutri, string tinhtranghientai, string tieusubanthan, string tieusugiadinh, string tieusuthancan, string sinhhoatcanhan, string chuandoan, string nguyennhan, string mabs) {
            return base.Channel.editMedicalReport(maBN, lydovaovien, trieuchung, tinhtrangcothe, cacphuongphapdieutri, tinhtranghientai, tieusubanthan, tieusugiadinh, tieusuthancan, sinhhoatcanhan, chuandoan, nguyennhan, mabs);
        }
        
        public int addNewComment(string maBanGhi, string maBS, System.DateTime ngaycapnhat, string noidung) {
            return base.Channel.addNewComment(maBanGhi, maBS, ngaycapnhat, noidung);
        }
        
        public int editComment(string maBanGhi, string maBS, System.DateTime ngaycapnhat, string noidung) {
            return base.Channel.editComment(maBanGhi, maBS, ngaycapnhat, noidung);
        }
        
        public ECGWorkStation.WebService.Comment[] getCommentByRID(string RID) {
            return base.Channel.getCommentByRID(RID);
        }
        
        public string getCommentContent(string RID, string DocID) {
            return base.Channel.getCommentContent(RID, DocID);
        }
        
        public string deleteComment(string RID, string DocID) {
            return base.Channel.deleteComment(RID, DocID);
        }
        
        public ECGWorkStation.WebService.Pattern[] getAllPattern() {
            return base.Channel.getAllPattern();
        }
        
        public ECGWorkStation.WebService.HistoryRecord[] getAllRecordByPID(string patientID) {
            return base.Channel.getAllRecordByPID(patientID);
        }
        
        public ECGWorkStation.WebService.HistoryRecord getRecordByID(string recordID) {
            return base.Channel.getRecordByID(recordID);
        }
        
        public ECGWorkStation.WebService.HistoryRecord[] getRecordByPIDBetween(string patientID, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.getRecordByPIDBetween(patientID, startDate, endDate);
        }
        
        public string loadECGRecord(string recordID) {
            return base.Channel.loadECGRecord(recordID);
        }
        
        public string loadECGRawRecord(string recordID) {
            return base.Channel.loadECGRawRecord(recordID);
        }
        
        public string loadECGRecord12(string recordid) {
            return base.Channel.loadECGRecord12(recordid);
        }
    }
}
